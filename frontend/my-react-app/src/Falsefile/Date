const[count,Setcount]=useState(0);
  const[days , setDays]=useState([])
// For Days 
useEffect(() => {
  if (b && count) {
    const currentDate = new Date(); // Get the current date
    const formattedDate = `${currentDate.getDate()}-${currentDate.getMonth() + 1}-${currentDate.getFullYear()}`; // Format the date (DD-MM-YYYY)
    const datesArray = cartItems.map(() => formattedDate); // Create an array with formatted dates
    
    setDays(datesArray); // Set the formatted dates for all cart items
  }
   console.log(days);
}, [b, count, cartItems]);
// increment and decrement
   useEffect(() => {
  if (b) {
    Setcount(Array(cartItems.length).fill(1));
  }
}, [b, cartItems]);



const handleIncrement = async (index, item) => {
    const newCounts = [...count];
    newCounts[index]++;
    Setcount(newCounts);
  
    const currentDate = new Date(); // Get the current date
    const newDate = new Date(currentDate.getTime() + newCounts[index] * 24 * 60 * 60 * 1000); // Calculate new date based on count
    const formattedDate = `${newDate.getDate()}-${newDate.getMonth() + 1}-${newDate.getFullYear()}`;
  
    const newDates = [...days];
    newDates[index] = formattedDate;
    setDays(newDates);
  };
  
  const handleDecrement = async (index, item) => {
    const newCounts = [...count];
    if (newCounts[index] > 1) {
      newCounts[index]--;
      Setcount(newCounts);
  
      const currentDate = new Date(); // Get the current date
      const newDate = new Date(currentDate.getTime() - newCounts[index] * 24 * 60 * 60 * 1000); // Calculate new date based on count
      const formattedDate = `${newDate.getDate()}-${newDate.getMonth() + 1}-${newDate.getFullYear()}`;
  
      const newDates = [...days];
      newDates[index] = formattedDate;
      setDays(newDates);
        console.log(days);
    } else {
      console.log("Count is already at zero.");
    }
  };
  <Button size="sm" variant="primary" onClick={() => handleIncrement(index,item)}>
                        Increment
                      </Button>
                      <span style={{ margin: "0 5px" }}></span>{" "}
                      {count[index]}
                      <br></br>
                      {days[index]}
                      <span style={{ margin: "0 5px" }}></span>{" "}
                      <Button size="sm" variant="secondary" onClick={() => handleDecrement(index,item)}>
                        Decrement
                      </Button>









                      const handleSubmitOfRent = async () => {
   

                        let myshelfdtoslist = [];
                        console.log(diff);
                        console.log(Expdates);
                    for (let i = 0; i < cartItems.length; i++) {
                        if (cartItems[i].type === "Rent") {
                            try {
                                if (diff[i] <= 0) {
                                    throw new Error("Select the number of days");
                                } else {
                                    myshelfdtoslist.push({
                                        productId: cartItems[i].productid,
                                        days: diff[i],
                                        ExpDate: Expdates[i],
                                       
                                    });
                                }
                            } catch (error) {
                                window.alert(error.message);
                            }
                        }
                    }
                       console.log(myshelfdtoslist);
                    
                        const token = sessionStorage.getItem("token");
                        const cartId = sessionStorage.getItem("cartId");
                        const selfId = sessionStorage.getItem("selfId");
                        // const respond = await fetch(
                        //   `http://localhost:8080/api/Usermyshelf/add/${cartId}/${selfId}`,
                        //   {
                        //     method: "POST",
                        //     body: JSON.stringify(myshelfdtoslist),
                        //     headers: {
                        //       Authorization: `Bearer ${token}`,
                        //       "Content-Type": "application/json",
                        //     },
                        //   }
                        // );
                        // if (respond.ok) {
                        //   window.alert("order place");
                        //   setRefresh(refresh + 1);
                        // }
                      };